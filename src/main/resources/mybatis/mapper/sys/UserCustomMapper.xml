<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rttmall.shopbackend.sys.mapper.UserCustomMapper">
    <resultMap id="BaseResultMap" type="com.rttmall.shopbackend.sys.pojo.UserCustom">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_pw" jdbcType="VARCHAR" property="userPw"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="login_count" jdbcType="INTEGER" property="loginCount"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, user_name, user_pw, real_name, user_email, create_time, login_time, last_login_time,
    login_count,status
    </sql>
    <sql id="Second_Column_List">
        user_id, user_name, real_name, user_email,status,
    </sql>
    <sql id="query_user_where">
        <if test="userName!=null and userName!=''">
            user_name LIKE concat('%',#{userName},'%')
        </if>
        <if test="realName!=null and realName!=''">
            and real_name= '${realName}'
        </if>
    </sql>
    <select id="queryMaxUserNameByRole" resultType="java.lang.String">
        SELECT max(substring(su.user_name,4)) from t_sys_user_role sur,t_sys_user su 
        where sur.role_id=#{roleId} and 
        su.user_id=sur.user_id and 
        su.user_name like concat(#{shortName},'%')
    </select>
    <select id="isExistUpdateUser" parameterType="UserCustom" resultType="Integer">
        SELECT count(1) FROM t_sys_user WHERE user_name=#{userName} AND user_id!=#{userId}
    </select>
    <select id="selectUserRoleByUserId" parameterType="java.lang.Integer" resultType="Role">
        SELECT userRole.role_id as roleId,role.role_name as roleName
        FROM t_sys_user_role userRole LEFT JOIN t_sys_role role ON userRole.role_id=role.role_id
        WHERE user_id=#{value}
    </select>
    <select id="isExistUser" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_sys_user WHERE user_name=#{value}
    </select>
    <select id="queryUser" parameterType="UserCustom"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user
        <where>
            <include refid="query_user_where"></include>
        </where>
        ORDER BY user_id desc
        limit #{pagination.startIndex},#{pagination.pageSize}
    </select>
    <select id="queryUserCount" parameterType="UserCustom"
            resultType="java.lang.Integer">
        SELECT count(1) FROM t_sys_user
        <where>
            <include refid="query_user_where"></include>
        </where>
    </select>
    <select id="loginCheck" parameterType="UserCustom"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user
        WHERE user_name=#{userName}
        AND user_pw=#{userPw} and status='VALID'

    </select>
    <delete id="batchDeleteUserRole" parameterType="java.util.List">
        delete from t_sys_user_role where user_id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteUserRole" parameterType="java.lang.Integer">
        delete from t_sys_user_role
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insertUserRole" parameterType="java.util.List">
        insert into t_sys_user_role (user_id,role_id) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            ('${item.user.userId}','${item.roleId}')
        </foreach>
    </insert>
    <update id="batchUpdateUser" parameterType="java.util.List">
        UPDATE t_sys_user set status='INVALID' WHERE user_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>